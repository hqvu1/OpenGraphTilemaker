@using Common
@inherits TilesModel;
<style>
    
</style>
<section class="@Class">
    <SortingAndSearch Class="@ShowIf(Loaded)" Ref="SortComponent"
                      Count="@State.CurrentTiles.Count"
                      OnSearch="@((Func<string, Task>)OnSearch)"
                      OnSortOrder="@((Func<SortOrder, Task>)OnSortOrder)"
                      OnSortProperty="@((Func<string, Task>)OnSortProperty)"
                      SearchText="@State.SearchText"
                      SortOrder="@State.SortOrder"
                      SortProperty="@State.SortProperty"/>

    <p></p>

    @if (State?.TagCloud != null && State.TagCloud.Any()) {
        <div class="tagCloud callout text-center">
            <ul>
                @foreach (var word in State.TagCloud.Where(pair => pair.Value > 1)) {
                    <li>
                        <a class="@("size" + (word.Value <= 6 ? word.Value : 6) )" onclick="@(async () => await OnSearch(word.Key))">@word.Key.ToLower()</a>
                    </li>
                }
            </ul>
        </div>
    }

    <div class="callout warning emphasize radius @ShowIf(Empty)">Empty!</div>

    <div class="masonry-css @ShowIf(Any)">

        @foreach (var item in State.CurrentTiles) {
            <div class="masonry-css-item auto">
                <Tile OpenGraphMetadata="@item"></Tile>
            </div>
        }

    </div>
</section>