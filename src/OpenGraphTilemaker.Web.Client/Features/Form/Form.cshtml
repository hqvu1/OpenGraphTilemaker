@page "/form"
@inherits FormModel

@{
    RenderFragment successText = @<span>Success! You've done it.</span>;
}

<h1>Form</h1>

<div class="@SuccessVisibility">
    <div class="callout success">@successText</div>
</div>

<div class="@ErrorVisibility">
    <ValidationSummary class="alert callout" Subject="@Person" TItem="Person"/>
</div>

<div class="@FormVisibility">
    <label for="firstname" class="@IsValidLabel(() => Person.FirstName)">
        First Name
        <input id="firstname" type="text" class="@IsValidInput(() => Person.FirstName)" bind="@Person.FirstName"/>
        <ValidationError class="form-error is-visible" Subject="@Person" Property="@nameof(Person.FirstName)" TItem="Person"/>
    </label>
    <label for="lastname" class="@IsValidLabel(() => Person.LastName)">
        Last Name
        <input id="lastname" type="text" class="@IsValidInput(() => Person.LastName)" bind="@Person.LastName"/>
        <ValidationError class="form-error is-visible" Subject="@Person" Property="@nameof(Person.LastName)" TItem="Person"/>
    </label>
    <label for="age" class="@IsValidLabel(() => Person.Age)">
        Age
        <input id="age" type="number" class="@IsValidInput(() => Person.Age)" bind="@Person.Age"/>
        <ValidationError Class="form-error is-visible" Subject="@Person" Property="@nameof(Person.Age)" TItem="Person"/>
        <small class="help-text">We'll never share your age with anyone else.</small>
    </label>

    <hr/>

    <button type="submit" class="button primary" onclick="@(async () => await SubmitAsync())">Submit</button>
</div>