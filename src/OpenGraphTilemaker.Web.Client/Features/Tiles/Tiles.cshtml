@inherits TilesModel;
<fieldset class="tiles-title">
    <legend>
        <small>@State.SortProperty @State.SortOrder, Count @State.CurrentTiles.Count</small>
    </legend>

    <div class="grid-x">
        <div class="cell large-6">
            <button class="button primary" onclick="@OnSortPropertyButtonClick">Sort Property</button>
            <button class="button primary" onclick="@OnSortOrderButtonClick">Sort Order</button>
        </div>
        <div class="cell large-6">
            <div class="input-group">
                <span class="input-group-label">
                    <i class="fi-page-search"></i>
                </span>
                <input class="input-group-field" type="text" bind="@State.SearchText"/>
                <div class="input-group-button">
                    <input type="submit" class="button" value="Search" placeholder="search value" onclick="@OnSearchButtonClick"/>
                </div>
            </div>
        </div>
    </div>

</fieldset>

<p></p>

<h1 class="@(IsLoading ? "" : "collapsed")">Loading...</h1>

@if (State.CurrentTiles.Any()) {
    <div class="masonry-css">
        @{
            for (var index = 0; index < State.CurrentTiles.Count; index += 1) {
                var item = State.CurrentTiles[index];
                <div class="masonry-css-item auto">
                    <Tile OpenGraphMetadata="@item"></Tile>
                </div>
            }
        }
    </div>
} else {
    <h1>Empty!</h1>
}